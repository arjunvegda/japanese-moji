const a=(...a)=>a.join("");function t(t,e){if(t)return;const n=a("[japanese-moji]: ",e);throw new Error(n)}const e=/^[\\][u][0-9A-F]{4,6}$/,n=a=>!!a&&new RegExp(e,"ui").test(a),o=(e,o)=>{const i=n(e),r=n(o);return t(i,"createRange: invalid unicode value supplied for start of the range"),t(r,"createRange: invalid unicode value supplied for end of the range"),a("[",e,"-",o,"]")},i=e=>(t(n(e),"createUnicode: invalid unicode value supplied"),a("[",e,"]"));var r;!function(a){a.CJKPunctuations="CJKPunctuations",a.Hiragana="Hiragana",a.Katakana="Katakana",a.KatakanaPhoneticExtension="KatakanaPhoneticExtension",a.RareKanji="RareKanji",a.KanjiCompatibilityIdeographs="KanjiCompatibilityIdeographs",a.CommonUncommonKanji="CommonUncommonKanji",a.RomanHalfwidthKatakana="RomanHalfwidthKatakana"}(r||(r={}));const c=o("\\u3000","\\u303f"),s=o("\\u3040","\\u309f"),u=o("\\u30a0","\\u30ff"),l=o("\\u31f0","\\u31FF"),p=o("\\u3400","\\u4dbf"),d=o("\\u4e00","\\u9fdf"),h=o("\\uf900","\\ufaff"),m=o("\\uff00","\\uffef"),f=Object.freeze({[r.CJKPunctuations]:c,[r.Hiragana]:s,[r.Katakana]:u,[r.KatakanaPhoneticExtension]:l,[r.RareKanji]:p,[r.KanjiCompatibilityIdeographs]:h,[r.CommonUncommonKanji]:d,[r.RomanHalfwidthKatakana]:m});process;const K=e=>{const n=[...((null==e?void 0:e.customRanges)||[]).map(a=>o(a.start,a.end)).filter(Boolean),...((a=[])=>a.map(i).filter(Boolean))(null==e?void 0:e.customUnicodes)],r=((e,n,o)=>{const i=n.map(n=>{const o=e[n];return t(o,`createRegexGroups: key "${n}" not found in the "characterSetMap"`),a(o)}).filter(Boolean);i.push(...o);const r=i.join("|");return a("(",r,")")})(f,e.characterSets,n);return r},g=e=>{t(e,'createStrictValidator: requires "options" to be supplied'),t(null==e?void 0:e.characterSets,'createStrictValidator: requires "options.characterSets" to be supplied');const n=K(e),o=a("^",n,"+$");return a=>new RegExp(o,"i").test(a)},j=e=>{t(e,'createMatchScoreCalculator: requires "options" to be supplied'),t(null==e?void 0:e.characterSets,'createMatchScoreCalculator: requires "options.characterSets" to be supplied');const n=K(e),o=a(n,"*");return a=>{const t=((a,t,e)=>{const n=new RegExp(t,"gui"),o=String(a).match(n);return(null==o?void 0:o.join(""))||""})(a,o);return t.length/a.length*100}},C=a=>{t(a,'createThresholdBasedValidator: requires "options" to be supplied'),t(null==a?void 0:a.characterSets,'createThresholdBasedValidator: requires "options.characterSets" to be supplied');const e=j(a);return(a,t=85)=>{const n=Math.max(0,Math.min(100,t));return e(a)>=n}},R={characterSets:[r.RareKanji,r.CommonUncommonKanji,r.KanjiCompatibilityIdeographs]},S=g(R),k=C(R),b=j(R),v={characterSets:[r.KatakanaPhoneticExtension,r.Katakana,r.Hiragana]},x=g(v),w=C(v),E=j(v),H={characterSets:[r.CJKPunctuations,r.Hiragana,r.Katakana,r.KatakanaPhoneticExtension,r.RareKanji,r.CommonUncommonKanji,r.KanjiCompatibilityIdeographs,r.RomanHalfwidthKatakana]},P=g(H),U=C(H),q=j(H);export{r as CharacterSet,j as createMatchScoreCalculator,g as createStrictValidator,C as createThresholdBasedValidator,q as howMuchJapaneseIsPresent,E as howMuchKanaIsPresent,b as howMuchKanjiIsPresent,U as isJapanesePresent,w as isKanaPresent,k as isKanjiPresent,P as isValidJapanese,x as isValidKana,S as isValidKanji};
